{% liquid
  assign max_width = section.settings.max_width
  assign column_gap = section.settings.column_gap
  assign content_position = section.settings.content_position
  assign form_text_alignment = section.settings.form_text_alignment
  assign info_column_position = section.settings.info_column_position
  assign info_text_alignment = section.settings.info_text_alignment
  assign success_text_alignment = section.settings.success_text_alignment

  assign input_label_color = section.settings.input_label_color
  if input_label_color == blank or input_label_color.alpha == 0.0
    assign input_label_color = settings.input_label_color
  endif

  assign default_font_size_mobile = 16
  assign default_font_size_desktop = 16

  assign label_font_size_scale = section.settings.label_font_size_scale

  assign label_font_size = default_font_size_mobile | times: label_font_size_scale | divided_by: 100.0 | round
  assign label_font_size_desktop = default_font_size_desktop | times: label_font_size_scale | divided_by: 100.0 | round

  assign label_line_height = label_font_size | times: 160 | divided_by: 100.0 | round | times: label_font_size_scale | divided_by: 100.0 | round
  assign label_line_height_desktop = label_font_size_desktop | times: 160 | divided_by: 100.0 | round | times: label_font_size_scale | divided_by: 100.0 | round

  assign input_background_color = section.settings.input_background_color
  if input_background_color == blank or input_background_color.alpha == 0.0
    assign input_background_color = settings.input_background_color
  endif

  assign input_text_color = section.settings.input_text_color
  if input_text_color == blank or input_text_color.alpha == 0.0
    assign input_text_color = settings.input_text_color
  endif

  assign input_placeholder_color = section.settings.input_placeholder_color
  if input_placeholder_color == blank or input_placeholder_color.alpha == 0.0
    assign input_placeholder_color = settings.input_placeholder_color
  endif

  assign input_border_color = section.settings.input_border_color
  if input_border_color == blank or input_border_color.alpha == 0.0
    assign input_border_color = settings.input_border_color
  endif

  assign input_active_highlight_color = section.settings.input_active_highlight_color
  assign input_font_size_scale = section.settings.input_font_size_scale

  assign input_font_size = default_font_size_mobile | times: input_font_size_scale | divided_by: 100.0 | round
  assign input_font_size_desktop = default_font_size_desktop | times: input_font_size_scale | divided_by: 100.0 | round

  assign input_line_height = input_font_size | times: 160 | divided_by: 100.0 | round | times: input_font_size_scale | divided_by: 100.0 | round
  assign input_line_height_desktop = input_font_size_desktop | times: 160 | divided_by: 100.0 | round | times: input_font_size_scale | divided_by: 100.0 | round

  assign input_border_radius = settings.border_radius
  assign input_border_width = section.settings.input_border_width

  assign text = section.settings.text
  assign type = section.settings.type
  assign text_color = section.settings.text_color
  assign background_color = section.settings.background_color
  assign border_color = section.settings.border_color
  assign border_width = section.settings.border_width
  assign border_radius = section.settings.border_radius
  assign animation = section.settings.animation

  assign success_type = section.settings.success_type
  assign success_image = section.settings.success_image
  assign success_image_width = section.settings.success_image_width
  assign success_title = section.settings.success_title
  assign success_title_color = section.settings.success_title_color
  assign success_title_font_size_scale = section.settings.success_title_font_size_scale
  assign success_paragraph = section.settings.success_paragraph
  assign success_para_color = section.settings.success_para_color
  assign success_para_font_size_scale = section.settings.success_para_font_size_scale

  assign error_email_text = 'validation.email_error' | t

  assign error_message_color = section.settings.error_message_color
  if error_message_color == blank or error_message_color.alpha == 0.0
    assign error_message_color = settings.error_message_color
  endif

  assign error_message_background_color = error_message_color | color_modify: 'alpha', 0.2

  assign top_margin = section.settings.top_margin
  assign bottom_margin = section.settings.bottom_margin

  assign info_text_blocks = section.blocks | where: 'type', 'info_text_with_label'
  assign info_social_blocks = section.blocks | where: 'type', 'socials'
  assign email_block = section.blocks | where: 'type', 'email'

  assign section_background_color = section.settings.section_background_color
  assign fullwidth_background = section.settings.fullwidth_background
  assign top_padding = section.settings.top_padding
  assign bottom_padding = section.settings.bottom_padding
  assign side_padding = section.settings.side_padding

  assign show_success = section.settings.show_success
  assign show_error = section.settings.show_error
%}

{% stylesheet %}
  .contact-form__content {
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-flow: dense;
    gap: 30px;
    grid-area: form;
    height: fit-content;
    width: 100%;
  }

  .contact-form__input.width-1,
  .contact-form__input.width-2 {
    grid-column: span 1;
  }

  .contact-form__info-column {
    display: flex;
    flex-direction: column;
    gap: 40px;
    grid-area: info;
  }

  .info-column__title {
    margin: 0;
    margin-bottom: 6px;
    font-weight: 500;
  }

  .info-column__text p {
    margin: 0;
  }

  .contact-form__input label {
    width: 100%;
    display: block;
    margin-bottom: 10px;
  }

  .contact-form .contact-form__button {
    width: 100%;
    max-width: none;
    height: fit-content;
  }

  .contact-form__noemail-block {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 48px;
  }

  .contact-form__success-block {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: fit-content;
    grid-column: 1 / 3;
    border: 1px solid #d9e2e8;
  }

  .success-block__image {
    display: flex;
    position: relative;
    padding-bottom: 100%;
    width: 100%;
  }

  .success-block__image img,
  .success-block__image svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .contact-form custom-select{
    width: 100%;
  }

  .contact-form .custom-select{
    width: 100%;
  }

  .contact-form__errors{
    list-style-type: none;
    margin: 0;
    margin-top: 16px;

  }

  @media only screen and (min-width: 768px) {

    .contact-form__input.width-1 {
      grid-column: span 1;
    }

    .contact-form__input.width-2 {
      grid-column: span 2;
    }

    .contact-form .contact-form__button {
      grid-column: 1 / 3;
    }

    .contact-form__info-column{
      max-width: none;
    }
  }
{% endstylesheet %}

{% if section.blocks.size > 1 %}
  {% style %}
    {% if section_background_color.alpha != null and section_background_color.alpha != 0.0 %}
      {% if fullwidth_background %}
        #shopify-section-{{ section.id }} {
          background-color: {{section_background_color}};
          max-width: 100%;
          padding-top: {{top_padding}}px;
          padding-bottom: {{bottom_padding}}px;
          padding-left: 0;
          padding-right: 0;
        }

        #shopify-section-{{ section.id }} .contact-form--inner {
          max-width: {{ settings.page_width }}px;
          margin: 0 auto;
          padding-left: 16px;
          padding-right: 16px;
        }
      {% else %}
        #shopify-section-{{ section.id }}{
          background-color: {{section_background_color}};
          padding-top: {{top_padding}}px;
          padding-bottom: {{bottom_padding}}px;
          padding-left: {{side_padding}}px;
          padding-right: {{side_padding}}px;
          box-sizing: border-box;
        }
      {% endif %}
    {% endif %}

      #shopify-section-{{ section.id }} .contact-form--inner{
        margin-top: {{ top_margin }}px;
        margin-bottom: {{ bottom_margin }}px;
        display: flex;
      }

    #shopify-section-{{ section.id }} .contact-form__content{
      gap: 56px;
      width: 100%;
      {% if max_width > 0 %}
        max-width: {{ max_width }}px;
      {% endif %}
    }

    #shopify-section-{{ section.id }} .contact-form__content form {
      display: grid;
      gap: 30px;
      grid-column: 1;
      grid-row: 1;
    }

    #shopify-section-{{ section.id }} .contact-form__content .contact-form__info-column {
      grid-column: 1;
      grid-row: 2;
    }

    #shopify-section-{{ section.id }} .contact-form__input input,
    #shopify-section-{{ section.id }} .contact-form__input textarea,
    #shopify-section-{{ section.id }} .custom-select__label,
    #shopify-section-{{ section.id }} .custom-select__list-option{
      font-size: {{ input_font_size }}px;
      line-height: {{ input_line_height }}px;
      text-align: {{ form_text_alignment }};
    }

    #shopify-section-{{ section.id }} .input-element input:focus-visible,
    #shopify-section-{{ section.id }} textarea:focus-visible{
      outline-color: {{ input_active_highlight_color }};
    }

    #shopify-section-{{ section.id }} .contact-form__input label{
      color: {{ input_label_color }};
      font-size: {{ label_font_size }}px;
      line-height: {{ label_line_height }}px;
      text-align: {{ form_text_alignment }};
    }

    #shopify-section-{{ section.id }} .info-column{
      color: {{ input_label_color }};
      text-align: {{ info_text_alignment }};
    }

    #shopify-section-{{ section.id }} .contact-form__socials{
      {% case info_text_alignment %}
        {% when 'left' %}
          justify-content: start;
        {% when 'center' %}
          justify-content: center;
        {% when 'right' %}
          justify-content: end;
      {% endcase %}
    }

    #shopify-section-{{ section.id }} .contact-form__noemail-block{
      border: 1px solid {{ error_message_color }};
      border-radius: {{ input_border_radius }}px;
      background-color: {{ error_message_color }}20;
      color: {{ error_message_color }};
    }

    #shopify-section-{{ section.id }} form .validation-messages__success{
      color: {% if success_color.alpha and success_color.alpha != 0.0 %}{{success_color}}{% else %}{{settings.success_message_color}}{% endif %};
    }

    #shopify-section-{{ section.id }} form .validation-messages__error{
      color: {{error_message_color}};
    }

    #shopify-section-{{ section.id }} form .validation-messages__error{
      color: {{error_message_color}};
    }

    #shopify-section-{{ section.id }} form input[type="text"].error,
    #shopify-section-{{ section.id }} form input[type="email"].error,
    #shopify-section-{{ section.id }} form textarea.error {
      border: 1px solid {{error_message_color}};
    }

    #shopify-section-{{ section.id }} .validation-error + .validation-messages .validation-messages__error{
      display: block;
    }

    #shopify-section-{{ section.id }} input.validation-error{
      background-color: {{error_message_color}}20;
      border-color: {{error_message_color}};
    }

    form input::-webkit-validation-bubble-message,
    form select::-webkit-validation-bubble-message,
    form textarea::-webkit-validation-bubble-message {
      display:none;
    }

    #shopify-section-{{ section.id }} .contact-form__errors{
      background-color: {{ error_message_color }}20;
    }

    #shopify-section-{{ section.id }} .contact-form__submit {
      grid-column: span 1;
    }

    #shopify-section-{{ section.id }} .contact-form__submit button {
      max-width: 100%;
      width: 100%;
    }

    /* Errors */
    #shopify-section-{{ section.id }} form .contact-form__form__errors {
      grid-column: span 1;
      max-height: 0px;
      height: auto;
      transition: max-height .3s ease;
      overflow: hidden;
    }
    @media only screen and (min-width: 769px) {
      #shopify-section-{{ section.id }} form .contact-form__form__errors {
        grid-column: span 2;
      }
      #shopify-section-{{ section.id }} .contact-form__submit {
        grid-column: span 2;
      }
      #shopify-section-{{ section.id }} .contact-form__submit button {
        max-width: 194px;
        width: 100%;
      }
    }
    #shopify-section-{{ section.id }} form.invalid .contact-form__form__errors {
      max-height: 1000px;
      transition: max-height .3s ease;
    }

    #shopify-section-{{ section.id }} .form-error {
      position: relative;
      background-color: {{error_message_background_color}};
      width: 100%;
      padding: 0px 16px;
      border-radius: {{settings.border_radius}}px;
      box-sizing: border-box;
      display: flex;
      align-items: baseline;
      opacity: 0;
      max-height: 0px;
      transition: opacity .3s ease, max-height .3s ease, padding .3s ease;
      height: auto;
      overflow: hidden;
      {%- case form_text_alignment -%}
        {%- when "center" -%}
          justify-content: center;
        {%- when "left" -%}
          justify-content: flex-start;
        {%- when "right" -%}
          justify-content: flex-end;
      {%- endcase -%}
    }

    #shopify-section-{{ section.id }} .form-error.show {
      opacity: 1;
      transition: opacity .3s ease, max-height .3s ease, padding .3s ease;
      max-height: 300px;
      padding: 16px 16px;
      margin-bottom: 20px;
    }

    #shopify-section-{{ section.id }} .form-error svg {
      width: 13px;
      height: 9px;
      margin-right: 6px;
    }

    #shopify-section-{{ section.id }} .form-error.success {
      background-color: {{success_message_background_color}};
    }

    #shopify-section-{{ section.id }} .form-error.success svg {
      width: 13px;
      height: 9px;
      margin-right: 7px;
    }

    #shopify-section-{{ section.id }} .form-status-list {
      padding: 0;
    }

    #shopify-section-{{ section.id }} .form-status-list .form-error {
      opacity: 1;
      transition: opacity .3s ease, max-height .3s ease, padding .3s ease;
      max-height: 300px;
      padding: 16px 16px;
      margin-bottom: 20px;
    }

    @media only screen and (min-width: 768px) {
      #shopify-section-{{ section.id }} .contact-form__content {
        {% if info_text_blocks.size > 0 or info_social_blocks.size > 0 %}
          grid-template-columns: 1fr 1fr;
        {% else %}
          max-width: max-content;
        {% endif %}
        {% case content_position %}
          {% when 'left' %}
            margin-left: 0;
            margin-right: auto;
          {% when 'center' %}
            margin-left: auto;
            margin-right: auto;
          {% when 'right' %}
            margin-left: auto;
            margin-right: 0;
        {% endcase %}
      }

      #shopify-section-{{ section.id }} .contact-form__content form {
        display: grid;
        gap: 30px;
        grid-column: 1;
        grid-row: 1;
      }

      #shopify-section-{{ section.id }} .contact-form__content .contact-form__info-column {
        grid-column: 1;
        grid-row: 2;
      }

      #shopify-section-{{ section.id }} .contact-form__input input,
      #shopify-section-{{ section.id }} .contact-form__input textarea,
      #shopify-section-{{ section.id }} .custom-select__label,
      #shopify-section-{{ section.id }} .custom-select__list-option{
        font-size: {{ input_font_size }}px;
        line-height: {{ input_line_height }}px;
        text-align: {{ form_text_alignment }};
      }

      #shopify-section-{{ section.id }} .input-element input:focus-visible,
      #shopify-section-{{ section.id }} textarea:focus-visible{
        outline-color: {{ input_active_highlight_color }};
      }

      #shopify-section-{{ section.id }} .contact-form__input label{
        color: {{ input_label_color }};
        font-size: {{ label_font_size }}px;
        line-height: {{ label_line_height }}px;
        text-align: {{ form_text_alignment }};
      }

      #shopify-section-{{ section.id }} .info-column{
        color: {{ input_label_color }};
        text-align: {{ info_text_alignment }};
      }

      #shopify-section-{{ section.id }} .contact-form__socials{
        {% case info_text_alignment %}
          {% when 'left' %}
            justify-content: start;
          {% when 'center' %}
            justify-content: center;
          {% when 'right' %}
            justify-content: end;
        {% endcase %}
      }

      #shopify-section-{{ section.id }} .contact-form__noemail-block{
        border: 1px solid {{ error_message_color }};
        border-radius: {{ input_border_radius }}px;
        background-color: {{ error_message_color }}20;
        color: {{ error_message_color }};
      }

      #shopify-section-{{ section.id }} form .validation-messages__success{
        color: {% if success_color.alpha and success_color.alpha != 0.0 %}{{success_color}}{% else %}{{settings.success_message_color}}{% endif %};
      }

      #shopify-section-{{ section.id }} form .validation-messages__error{
        color: {{error_message_color}};
      }

      #shopify-section-{{ section.id }} .validation-error + .validation-messages .validation-messages__error{
        display: block;
      }

      #shopify-section-{{ section.id }} input.validation-error{
        background-color: {{error_message_color}}20;
        border-color: {{error_message_color}};
      }

      form input::-webkit-validation-bubble-message,
      form select::-webkit-validation-bubble-message,
      form textarea::-webkit-validation-bubble-message {
        display:none;
      }

      #shopify-section-{{ section.id }} .contact-form__errors{
        background-color: {{ error_message_color }}20;
      }
      button#{{ section.id }} {
        max-width: 100%;
        width: 100%;
      }
      @media only screen and (min-width: 768px) {
        #shopify-section-{{ section.id }} .contact-form__content {
          {% if info_text_blocks.size > 0 or info_social_blocks.size > 0 %}
            {% if info_column_position == 'right' %}
              grid-template-columns: 2fr {% if info_text_blocks.size > 0 or info_social_blocks.size > 0 %}minmax(min-content, 30%){% endif %};
            {% else %}
              grid-template-columns: {% if info_text_blocks.size > 0 or info_social_blocks.size > 0 %}minmax(min-content, 30%){% endif %} 2fr;
            {% endif %}
          {% else %}
            grid-template-columns: 1fr;
            {% if max_width != blank and max_width > 0 %}
              max-width: {{ max_width }}px;
            {% else %}
              max-width: max-content;
            {% endif %}
          {% endif %}
          {% case content_position %}
            {% when 'left' %}
              margin-left: 0;
              margin-right: auto;
            {% when 'center' %}
              margin-left: auto;
              margin-right: auto;
            {% when 'right' %}
              margin-left: auto;
              margin-right: 0;
          {% endcase %}
        }

        button#{{ section.id }} {
          max-width: 194px;
          width: 100%;
        }

        #shopify-section-{{ section.id }} .contact-form__input input,
        #shopify-section-{{ section.id }} .contact-form__input input{
          font-size: {{ input_font_size_desktop }}px;
          line-height: {{ input_line_height_desktop }}px;
        }

        #shopify-section-{{ section.id }} .contact-form__input label{
          font-size: {{ label_font_size_desktop }}px;
          line-height: {{ label_line_height_desktop }}px;
        }

        #shopify-section-{{ section.id }} .contact-form__content{
          {% if info_column_position == 'right' %}
            flex-direction: row;
          {% else %}
            flex-direction: row-reverse;
          {% endif %}
        }

        #shopify-section-{{ section.id }} .contact-form__content{
          gap: {{ column_gap }}px;
        }

        #shopify-section-{{ section.id }} .contact-form__content form {
            {% if info_column_position == 'right' %}
              grid-column: 1;
            {% else %}
              grid-column: 2;
            {% endif %}
            grid-row: 1;
        }

        #shopify-section-{{ section.id }} .contact-form__content .contact-form__info-column {
          {% if info_column_position == 'right' %}
              grid-column: 2;
            {% else %}
              grid-column: 1;
            {% endif %}
            grid-row: 1;
        }
      }
  {% endstyle %}

  <div class="contact-form--inner">
    <div class="contact-form__content">
      {% if email_block.size == 0 %}
        <div class="contact-form__noemail-block">
          <h3>{{ 'sections.contact.noemail_title' | t }}</h3>
          <p>{{ 'sections.contact.noemail_text' | t }}</p>
        </div>
      {% else %}
        {% assign form_classes = 'contact-form form-validation' %}
        {% if show_error and request.design_mode %}
          {%- assign form_classes = form_classes | append: ' invalid' -%}
        {% endif %}

        {%- form 'contact', id: 'ContactForm', class: form_classes -%}
          {% if form.posted_successfully? and success_type == 'replace_form' %}
            {% style %}
              #shopify-section-{{ section.id }} .contact-form__success-block{
                border-radius: {{ border_radius }}px;
                overflow: hidden;
              }

              #shopify-section-{{ section.id }} .success-block__text{
                text-align: {{ success_text_alignment }};
                {% if success_image != blank and success_title != blank %}
                  padding: 20px 40px;
                {% elsif success_title != blank %}
                  padding: 48px;
                {% endif %}
              }

              #shopify-section-{{ section.id }} .success-block__text .block__title,
              #shopify-section-{{ section.id }} .success-block__text .block__paragraph{
                text-align: inherit;
              }

              @media only screen and (min-width: 768px) {
                #shopify-section-{{ section.id }} .contact-form__success-block .success-block__image{
                  max-width: {{ success_image_width }}%;
                }
              }
            {% endstyle %}
            <div class="contact-form__success-block">
              {% if success_image != blank %}
                <div class="success-block__image">
                  {%- assign image_sizes = '(max-width: 574px), 100vw - 32px, (min-width: 575px) 1000px, 1000px' -%}
                  {% render 'responsive-image-dynamic_v2', image: success_image, sizes: image_sizes %}
                </div>
              {% endif %}

              <div class="success-block__text">
                {% if success_title != blank %}
                  {% render 'title_v2',
                    text: success_title,
                    color: success_title_color,
                    tag: 'h3',
                    font_size_scale: success_title_font_size_scale,
                    block_id: section.id,
                    visible_on_desktop: true,
                    visible_on_mobile: true,
                    default_font_size_desktop: 24,
                    default_font_size_mobile: 24
                  %}
                {% endif %}

                {% if success_paragraph != blank %}
                  {% render 'paragraph_v2',
                    text: success_paragraph,
                    color: success_para_color,
                    font_size_scale: success_para_font_size_scale,
                    block_id: section.id,
                    margin_top: 8,
                    visible_on_desktop: true,
                    visible_on_mobile: true
                  %}
                {% endif %}
              </div>
            </div>
          {% else %}
            {% for block in section.blocks %}
              {% case block.type %}
                {% when 'email' %}
                  {% liquid
                    assign width = block.settings.width
                    assign label = block.settings.label
                    assign placeholder = block.settings.placeholder
                  %}
                  <div class="contact-form__input width-{{ width }}">
                    <label for="{{ block.id }}">{{ label }}</label>
                    {% render 'input-element_v2',
                      input_type: 'email',
                      input_name: 'contact[email]',
                      classes: 'email-validation',
                      pattern: '[^\s@]+@[^\s@]+\.[^\s@]+',
                      placeholder: placeholder,
                      placeholder_text_color: input_placeholder_color,
                      input_text_color: input_text_color,
                      input_background_color: input_background_color,
                      input_border_color: input_border_color,
                      input_border_width: input_border_width,
                      input_border_radius: input_border_radius,
                      error_message: error_email_text,
                      aria_label: 'input',
                      input_id: block.id,
                      required: true
                    %}
                  </div>
                {% when 'text' %}
                  {% liquid
                    assign required = block.settings.required
                    assign width = block.settings.width
                    assign label = block.settings.label
                    assign placeholder = block.settings.placeholder
                    assign input_name = label | handelize | append: '-' | append: block.id | append: ']' | prepend: 'contact['
                  %}

                  <div class="contact-form__input width-{{ width }}">
                    <label for="{{ block.id }}">{{ label }}</label>
                    {% render 'input-element_v2',
                      input_type: 'text',
                      input_name: input_name,
                      placeholder: placeholder,
                      placeholder_text_color: input_placeholder_color,
                      input_text_color: input_text_color,
                      input_background_color: input_background_color,
                      input_border_color: input_border_color,
                      input_border_width: input_border_width,
                      input_border_radius: input_border_radius,
                      aria_label: 'input',
                      input_id: block.id,
                      required: required
                    %}
                  </div>
                {% when 'textarea' %}
                  {% liquid
                    assign required = block.settings.required
                    assign label = block.settings.label
                    assign placeholder = block.settings.placeholder

                    assign default_font_size_mobile = default_font_size_mobile | default: 16
                    assign default_font_size_desktop = default_font_size_desktop | default: 16
                    assign global_setting_font_size_scale = settings.paragraph_font_size_scale | default: 100
                    assign global_setting_line_height_scale = settings.paragraph_line_spacing_scale | default: 100

                    assign font_size = default_font_size_mobile | times: global_setting_font_size_scale | divided_by: 100.0 | round
                    assign font_size_desktop = default_font_size_desktop | times: global_setting_font_size_scale | divided_by: 100.0 | round

                    assign line_height = font_size | times: 160 | divided_by: 100.0 | round | times: global_setting_line_height_scale | divided_by: 100.0 | round
                    assign line_height_desktop = font_size_desktop | times: 160 | divided_by: 100.0 | round | times: global_setting_line_height_scale | divided_by: 100.0 | round

                    assign input_name = label | handelize | append: '-' | append: block.id | append: ']' | prepend: 'contact['
                  %}

                  <div class="contact-form__input width-2">
                    {% style %}
                      .element-{{block.id}} {
                        flex: 1 0 auto;
                      }

                      .input-{{block.id}} {
                        font-family: {{ settings.paragraph_font.family }}, {{ settings.paragraph_font.fallback_families }};
                        font-weight: {{ settings.paragraph_font.weight }};
                        font-size: {{font_size}}px;
                        line-height: {{line_height}}px;
                        color: {% if input_text_color.alpha and input_text_color.alpha != 0.0 %}{{input_text_color}}{% else %}{{settings.input_text_color}}{% endif %};
                        background-color: {% if input_background_color.alpha and input_background_color.alpha != 0.0 %}{{input_background_color}}{% else %}{{settings.input_background_color}}{% endif %};
                        border: {{ input_border_width }}px solid {% if input_border_color.alpha and input_border_color.alpha != 0.0 %}{{input_border_color}}{% else %}{{settings.input_border_color}}{% endif %};
                        border-radius: {{input_border_radius}}px;
                        padding: 8px 16px;
                        min-height: 50px;
                        box-sizing: border-box;
                        width: 100%;
                        flex: 1 0 auto;
                        max-width: 100%;
                        min-width: 100%;
                        max-height: 80vh;
                        min-height: 50px;
                      }

                      .input-{{block.id}}::placeholder {
                        color: {% if input_placeholder_color.alpha and input_placeholder_color.alpha != 0.0 %}{{input_placeholder_color}}{% else %}{{settings.input_placeholder_color}}{% endif %};
                      }

                      @media only screen and (min-width: 768px) {
                        .element-{{block.id}} {
                          flex: 1 0 auto;
                        }

                        .input-{{block.id}} {
                          width: 100%;
                          font-size: {{font_size_desktop}}px;
                          line-height: {{line_height_desktop}}px;
                        }
                      }
                    {% endstyle %}

                    <label for="input--{{ block.id }}">{{ label }}</label>
                    <textarea
                      class="input-{{block.id}}"
                      name="{{ input_name }}"
                      id="input--{{ block.id }}"
                      placeholder="{{placeholder}}"
                      rows="5"
                      {% if required %}
                        required
                      {% endif -%}
                    ></textarea>
                  </div>
                {% when 'phone' %}
                  {% liquid
                    assign required = block.settings.required
                    assign width = block.settings.width
                    assign label = block.settings.label
                    assign placeholder = block.settings.placeholder
                    assign input_name = label | handelize | append: '-' | append: block.id | append: ']' | prepend: 'contact['
                  %}

                  <div class="contact-form__input width-{{ width }}">
                    <label for="{{ block.id }}">{{ label }}</label>
                    {% render 'input-element_v2',
                      input_type: 'tel',
                      input_name: input_name,
                      placeholder: placeholder,
                      classes: 'phone-validation',
                      placeholder_text_color: input_placeholder_color,
                      input_text_color: input_text_color,
                      input_background_color: input_background_color,
                      input_border_color: input_border_color,
                      input_border_width: input_border_width,
                      input_border_radius: input_border_radius,
                      aria_label: 'input',
                      input_id: block.id,
                      required: required,
                      error_message: 'Phone error'
                    %}
                  </div>
                {% when 'select' %}
                  {% liquid
                    assign required = block.settings.required
                    assign width = block.settings.width
                    assign label = block.settings.label
                    assign options = block.settings.options

                    assign input_name = label | handelize | append: '-' | append: block.id | append: ']' | prepend: 'contact['
                  %}

                  <div class="contact-form__input width-{{ width }}">
                    {% render 'select-input_v2',
                      options: options,
                      label: label,
                      id: block.id,
                      required: required,
                      placeholder: label,
                      select_name: input_name,
                      border_radius: input_border_radius,
                      border_color: input_border_color,
                      text_color: input_text_color,
                      background_color: input_background_color,
                      higlight_color: input_border_color
                    %}
                  </div>
              {% endcase %}
            {% endfor %}
            <div class="contact-form__submit">
              {% if request.design_mode %}
                {%- assign atributes = 'disabled' -%}
              {% endif %}
              {% render 'button-with-animation_v2',
                text: text,
                type: type,
                animation: animation,
                classes: 'contact-form__button',
                id: '',
                aria_label: '',
                data_attributes: '',
                element_type: 'submit',
                text_color: text_color,
                background_color: background_color,
                border_color: border_color,
                border_width: border_width,
                border_radius: border_radius,
                data_attributes: atributes,
                button_id: section.id
              %}
            </div>

            <div class="contact-form__form__errors">
              <div
                class="form-error error {% if show_error and request.design_mode %}show{% endif %}"
                data-first-name-required
              >
                {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                {%- assign error_text = 'forms.contact_form.errors.first_name_required' | t -%}
                {%- assign error_id = section.id | append: '-first-name-error' -%}
                {% render 'plane-text_v2',
                  text: error_text,
                  color: error_message_color,
                  visible_on_desktop: true,
                  visible_on_mobile: true,
                  block_id: error_id,
                  default_font_size_desktop: 15,
                  default_color: settings.paragraph_color
                %}
              </div>

              <div
                class="form-error error {% if show_error and request.design_mode %}show{% endif %}"
                data-last-name-required
              >
                {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                {%- assign error_text = 'forms.contact_form.errors.last_name_required' | t -%}
                {%- assign error_id = section.id | append: '-last-name-error' -%}
                {% render 'plane-text_v2',
                  text: error_text,
                  color: error_message_color,
                  visible_on_desktop: true,
                  visible_on_mobile: true,
                  block_id: error_id,
                  default_font_size_desktop: 15,
                  default_color: settings.paragraph_color
                %}
              </div>

              <div
                class="form-error error {% if show_error and request.design_mode %}show{% endif %}"
                data-email-required
              >
                {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                {%- assign error_text = 'forms.contact_form.errors.email_required' | t -%}
                {%- assign error_id = section.id | append: '-email-required-error' -%}
                {% render 'plane-text_v2',
                  text: error_text,
                  color: error_message_color,
                  visible_on_desktop: true,
                  visible_on_mobile: true,
                  block_id: error_id,
                  default_font_size_desktop: 15,
                  default_color: settings.paragraph_color
                %}
              </div>

              <div class="form-error error {% if show_error and request.design_mode %}show{% endif %}" data-email-error>
                {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                {%- assign error_text = 'forms.contact_form.errors.email_format_error' | t -%}
                {%- assign error_id = section.id | append: '-email-error' -%}
                {% render 'plane-text_v2',
                  text: error_text,
                  color: error_message_color,
                  visible_on_desktop: true,
                  visible_on_mobile: true,
                  block_id: error_id,
                  default_font_size_desktop: 15,
                  default_color: settings.paragraph_color
                %}
              </div>

              <div
                class="form-error error {% if show_error and request.design_mode %}show{% endif %}"
                data-body-required
              >
                {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                {%- assign error_text = 'forms.contact_form.errors.body_required' | t -%}
                {%- assign error_id = section.id | append: '-body-error' -%}
                {% render 'plane-text_v2',
                  text: error_text,
                  color: error_message_color,
                  visible_on_desktop: true,
                  visible_on_mobile: true,
                  block_id: error_id,
                  default_font_size_desktop: 15,
                  default_color: settings.paragraph_color
                %}
              </div>

              {%- if form.errors -%}
                <div
                  class="form-error error {% if show_error and request.design_mode %}show{% endif %}"
                  data-default-error
                >
                  {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                  {%- assign error_text = 'forms.contact_form.errors.error_heading' | t -%}
                  {%- assign error_id = section.id | append: '-default-error' -%}
                  {% render 'plane-text_v2',
                    text: error_text,
                    color: error_message_color,
                    visible_on_desktop: true,
                    visible_on_mobile: true,
                    block_id: error_id,
                    default_font_size_desktop: 15,
                    default_color: settings.paragraph_color
                  %}
                </div>

                <ul class="form-status-list">
                  {%- for field in form.errors -%}
                    <li class="form-error error">
                      <a href="#CommentForm-{{ field }}" class="link">
                        {%- if form.errors contains 'email' -%}
                          <small class="contact__field-error" id="ContactForm-email-error">
                            <span class="visually-hidden">{{ 'accessibility.general.error' | t }}</span>
                            <span class="form__message">
                              {% render 'icon_v2', icon: 'form-message-error-icon', color: error_message_color %}
                              {%- assign error_text = form.errors.translated_fields.email
                                | capitalize
                                | append: ' '
                                | append: form.errors.messages.email
                              -%}
                              {%- assign error_id = section.id | append: '-default-error' -%}
                              {% render 'plane-text_v2',
                                text: error_text,
                                color: error_message_color,
                                visible_on_desktop: true,
                                visible_on_mobile: true,
                                block_id: error_id,
                                default_font_size_desktop: 15,
                                default_color: settings.paragraph_color
                              %}
                            </span>
                          </small>
                        {%- endif -%}
                      </a>
                    </li>
                  {%- endfor -%}
                </ul>
              {%- elsif form.posted_successfully? -%}
                <div
                  class="form-error success {% if show_success and request.design_mode %}show{% endif %}"
                  data-success-message
                >
                  {% render 'icon_v2', icon: 'form-message-success-icon', color: success_message_color %}
                  {%- assign error_text = post_message | t -%}
                  {% if inline_custom_message != blank %}
                    {%- assign error_text = inline_custom_message -%}
                  {% endif %}
                  {%- assign error_id = block.id | append: '-success' -%}
                  {% render 'plane-text_v2',
                    text: error_text,
                    color: success_message_color,
                    visible_on_desktop: true,
                    visible_on_mobile: true,
                    block_id: error_id,
                    default_font_size_desktop: 15,
                    default_color: settings.paragraph_color
                  %}
                </div>
              {%- endif -%}
            </div>
          {% endif %}

          {% if form.posted_successfully? and success_type == 'popup' %}
            {% style %}
              #shopify-section-{{ section.id }} .success-popup__image,
              .contact-form__success-popup{
                border-radius: {{ border_radius }}px;
                overflow: hidden;
              }

              #shopify-section-{{ section.id }} .success-popup__text{
                text-align: {{ success_text_alignment }};
              }

              #shopify-section-{{ section.id }} .success-popup__text .block__title,
              #shopify-section-{{ section.id }} .success-popup__text .block__paragraph{
                text-align: inherit;
              }

              .contact-form__success-popup__overlay{
                background-color: #00000080;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 1000vh;
                z-index: 10;
              }

              .contact-form__success-popup{
                position: fixed;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: 11;
                background-color: {{ settings.card_background_color }};
                padding: 32px;
                display: none;
                width: calc(100% - 16px);
                flex-direction: column;
                align-items: center;
                justify-content: center;
                box-sizing: border-box;
              }

              .contact-form__success-popup:not(.active) + .contact-form__success-popup__overlay{
                display: none;
              }

              .success-popup__close{
                position: absolute;
                top: 4px;
                left: 4px;
                width: 28px;
                height: 28px;
                display: block;
                cursor: pointer;
              }

              .contact-form__success-popup.active{
                display: flex;
              }

              .success-popup__close svg{
                width: 16px;
                height: 16px;
              }

              .success-popup__text{
                margin-top: 20px;
              }

              #shopify-section-{{ section.id }} .success-popup__image{
                display: flex;
                max-width: {{ success_image_width }}%;
                width: 100%;
                padding-bottom: 100%;
                position: relative;
              }

              #shopify-section-{{ section.id }} .success-popup__image img,
              #shopify-section-{{ section.id }} .success-popup__image svg {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
              }

              @media only screen and (min-width: 768px) {
                .contact-form__success-popup{
                  width: 600px;
                  padding: 48px;
                }

                .success-popup__close{
                  top: 16px;
                  left: 16px;
                }
              }
            {% endstyle %}
            <div class="contact-form__success-popup active">
              <span class="success-popup__close" aria-label="{{ "accessibility.contact.close_popup" | t }}">
                {%- render 'icon_v2', icon: 'cross', color: settings.heading_color -%}
              </span>
              {% if success_image != blank %}
                <div class="success-popup__image">
                  {%- assign image_sizes = '(max-width: 574px), 100vw - 32px, (min-width: 575px) 1000px, 1000px' -%}
                  {% render 'responsive-image-dynamic_v2', image: success_image, sizes: image_sizes %}
                </div>
              {% endif %}

              <div class="success-popup__text">
                {% if success_title != blank %}
                  {% render 'title_v2',
                    text: success_title,
                    color: success_title_color,
                    tag: 'h3',
                    font_size_scale: success_title_font_size_scale,
                    block_id: section.id,
                    visible_on_desktop: true,
                    visible_on_mobile: true,
                    default_font_size_desktop: 32,
                    default_font_size_mobile: 24
                  %}
                {% endif %}

                {% if success_paragraph != blank %}
                  {% render 'paragraph_v2',
                    text: success_paragraph,
                    color: success_para_color,
                    font_size_scale: success_para_font_size_scale,
                    block_id: section.id,
                    margin_top: 8,
                    visible_on_desktop: true,
                    visible_on_mobile: true
                  %}
                {% endif %}
              </div>
            </div>
            <div class="contact-form__success-popup__overlay"></div>
          {% endif %}
        {% endform %}
      {% endif %}
      {% if success_type == 'popup' and show_success and request.design_mode %}
        {% style %}
          #shopify-section-{{ section.id }} .success-popup__image,
          .contact-form__success-popup{
            border-radius: {{ border_radius }}px;
            overflow: hidden;
          }

          #shopify-section-{{ section.id }} .success-popup__text{
            {% case success_text_alignment %}
              {% when 'left' %}
                text-align: left;
              {% when 'center' %}
                text-align: center;
              {% when 'right' %}
                text-align: right;
            {% endcase %}
          }

          #shopify-section-{{ section.id }} .success-popup__text .block__title,
          #shopify-section-{{ section.id }} .success-popup__text .block__paragraph{
            text-align: inherit;
          }

          .contact-form__success-popup__overlay{
            background-color: #00000080;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 1000vh;
            z-index: 14;
          }

          .contact-form__success-popup{
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 15;
            background-color: {{ settings.card_background_color }};
            padding: 32px;
            display: none;
            width: calc(100% - 16px);
            flex-direction: column;
            align-items: center;
            justify-content: center;
            box-sizing: border-box;
          }

          .contact-form__success-popup:not(.active) + .contact-form__success-popup__overlay{
            display: none;
          }

          .success-popup__close{
            position: absolute;
            top: 4px;
            left: 4px;
            width: 28px;
            height: 28px;
            display: block;
            cursor: pointer;
          }

          .contact-form__success-popup.active{
            display: flex;
          }

          .success-popup__close svg{
            width: 16px;
            height: 16px;
          }

          .success-popup__text{
            margin-top: 20px;
          }

          #shopify-section-{{ section.id }} .success-popup__image{
              display: flex;
              max-width: {{ success_image_width }}%;
              width: 100%;
              padding-bottom: 100%;
              position: relative;
            }

            #shopify-section-{{ section.id }} .success-popup__image img,
            #shopify-section-{{ section.id }} .success-popup__image svg {
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              object-fit: cover;
            }

          @media only screen and (min-width: 768px) {
            .contact-form__success-popup{
              width: 600px;
              padding: 48px;
            }

            .success-popup__close{
              top: 16px;
              left: 16px;
            }
          }
        {% endstyle %}
        <div class="contact-form__success-popup active">
          <span class="success-popup__close" aria-label="{{ "accessibility.contact.close_popup" | t }}">
            {%- render 'icon_v2', icon: 'cross', color: settings.heading_color -%}
          </span>
          {% if success_image != blank %}
            <div class="success-popup__image">
              {%- assign image_sizes = '(max-width: 574px), 100vw - 32px, (min-width: 575px) 1000px, 1000px' -%}
              {% render 'responsive-image-dynamic_v2', image: success_image, sizes: image_sizes %}
            </div>
          {% endif %}

          <div class="success-popup__text">
            {% if success_title != blank %}
              {% render 'title_v2',
                text: success_title,
                color: success_title_color,
                tag: 'h3',
                font_size_scale: success_title_font_size_scale,
                block_id: section.id,
                visible_on_desktop: true,
                visible_on_mobile: true,
                default_font_size_desktop: 32,
                default_font_size_mobile: 24
              %}
            {% endif %}

            {% if success_paragraph != blank %}
              {% render 'paragraph_v2',
                text: success_paragraph,
                color: success_para_color,
                font_size_scale: success_para_font_size_scale,
                block_id: section.id,
                margin_top: 8,
                visible_on_desktop: true,
                visible_on_mobile: true
              %}
            {% endif %}
          </div>
        </div>
        <div class="contact-form__success-popup__overlay"></div>
      {% endif %}

      {% if info_text_blocks.size > 0 or info_social_blocks.size > 0 %}
        <div class="contact-form__info-column">
          {% if info_text_blocks.size > 0 %}
            {% for block in info_text_blocks %}
              {% liquid
                assign label = block.settings.label
                assign text = block.settings.text
              %}

              <div class="info-column">
                {% if label != blank %}
                  <p class="info-column__title">
                    {{ label }}
                  </p>
                {% endif %}
                {% if text != blank %}
                  <div class="info-column__text">
                    {{ text }}
                  </div>
                {% endif %}
              </div>
            {% endfor %}
          {% endif %}

          {% if info_social_blocks.size > 0 %}
            {% for block in info_social_blocks %}
              {% liquid
                assign icon_width = block.settings.icon_width
                assign icon_color = block.settings.icon_color
                if icon_color == blank or icon_color.alpha == 0.0
                  assign icon_color = settings.icon_color
                endif
              %}

              {% style %}
                #block-{{block.id}} {
                  margin: 0;
                  height: auto;
                  list-style: none;
                  padding-left: 0;
                    display: flex;
                  flex-direction: row;
                  flex-wrap: wrap;
                }

                #block-{{block.id}} li + li {
                  margin-left: 10px;
                }

                #block-{{block.id}} li a {
                  display: block;
                  width: {{icon_width}}px;
                  height: {{icon_width}}px;
                }

                #block-{{block.id}} li a svg {
                  width: 100%;
                  height: 100%;
                }
              {% endstyle %}

              <ul class="contact-form__socials" id="block-{{block.id}}" role="list">
                {%- if settings.facebook != blank and block.settings.show_facebook -%}
                  <li role="listitem">
                    <a href="{{settings.facebook}}" title="Facebook">
                      {%- render 'icon_v2', icon: 'facebook', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.linkedin != blank and block.settings.show_linkedin -%}
                  <li role="listitem">
                    <a href="{{settings.linkedin}}" title="Linkedin">
                      {%- render 'icon_v2', icon: 'linkedin', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.instagram != blank and block.settings.show_instagram -%}
                  {%- assign second_color = section_background_color -%}
                  {% if second_color.alpha == null or second_color.alpha == 0.0 %}
                    {%- assign second_color = settings.primary_background_color -%}
                  {% endif %}

                  <li role="listitem">
                    <a href="{{settings.instagram}}" title="Instagram">
                      {%- render 'icon_v2', icon: 'instagram', color: icon_color, second_color: second_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.twitter != blank and block.settings.show_twitter -%}
                  <li role="listitem">
                    <a href="{{settings.twitter}}" title="Twitter">
                      {%- render 'icon_v2', icon: 'twitter', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.pinterest != blank and block.settings.show_pinterest -%}
                  <li role="listitem">
                    <a href="{{settings.pinterest}}" title="Pinterest">
                      {%- render 'icon_v2', icon: 'pinterest', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.twitch != blank and block.settings.show_twitch -%}
                  <li role="listitem">
                    <a href="{{settings.twitch}}" title="Twitch">
                      {%- render 'icon_v2', icon: 'twitch', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.snapchat != blank and block.settings.show_snapchat -%}
                  <li role="listitem">
                    <a href="{{settings.snapchat}}" title="Snapchat">
                      {%- render 'icon_v2', icon: 'snapchat', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.tiktok != blank and block.settings.show_tiktok -%}
                  <li role="listitem">
                    <a href="{{settings.tiktok}}" title="Tiktok">
                      {%- render 'icon_v2', icon: 'tiktok', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
                {%- if settings.youtube != blank and block.settings.show_youtube -%}
                  <li role="listitem">
                    <a href="{{settings.youtube}}" title="Youtube">
                      {%- render 'icon_v2', icon: 'youtube', color: icon_color -%}
                    </a>
                  </li>
                {%- endif -%}
              </ul>
            {% endfor %}
          {% endif %}
        </div>
      {% endif %}
    </div>
  </div>
{% endif %}

{% javascript %}
  const handleSuccessPopup = ()=>{
    const successPopups = document.querySelectorAll('.contact-form__success-popup');
    if (successPopups.length > 0) {
      successPopups.forEach(popup=>{
        const successPopupClose = popup.querySelector('.success-popup__close');
        const body = document.querySelector('body');
        body.classList.add('locked');

        successPopupClose.addEventListener('click', () => {
          let url = new URL(window.location.href);
          let params = new URLSearchParams(url.search);
          params.delete('contact_posted');
          url.search = params.toString();
          window.history.replaceState({}, '', url.toString());

          popup.classList.remove('active');
          body.classList.remove('locked');
        });
      })
    }
  }

  const handleFormValidation = ()=>{
    let form = null;
    let submitButton = null;
    let firstNameInput = null;
    let lastNameInput = null;
    let emailInput = null;
    let bodyInput = null;

    let firstNameReqError = null;
    let lastNameReqError = null;
    let emailReqError = null;
    let emailFormatError = null;
    let bodyReqError = null;

    let defaultErrors = null;
    let successMessage = null;

    const dispatchFirstNameError = () => {
      if (!firstNameInput.checkValidity()) {
        form.classList.add('invalid');
        firstNameInput.classList.add('error');
        firstNameReqError.classList.add('show');

        setTimeout(() => {
          form.classList.remove('invalid');
          firstNameInput.classList.remove('error');
          firstNameReqError.classList.remove('show');
        }, 3000);
        return true
      }
    }
    const dispatchLastNameError = () => {
      if (!firstNameInput.checkValidity()) {
        form.classList.add('invalid');
        lastNameInput.classList.add('error');
        lastNameReqError.classList.add('show');

        setTimeout(() => {
          form.classList.remove('invalid');
          lastNameInput.classList.remove('error');
          lastNameReqError.classList.remove('show');
        }, 3000);
        return true
      }
    }

    const dispatchEmailError = () => {
      if (!emailInput.checkValidity()) {
        form.classList.add('invalid');
        emailInput.classList.add('error');
        if (!emailInput.value) {
          emailReqError.classList.add('show');
        }
        emailFormatError.classList.add('show');
        setTimeout(() => {
          form.classList.remove('invalid');
          emailInput.classList.remove('error');
          emailReqError.classList.remove('show');
          emailFormatError.classList.remove('show');
        }, 3000);
        return true
      }
    }

    const dispatchBodyError = () => {
      if (!bodyInput.checkValidity()) {
        form.classList.add('invalid');
        bodyInput.classList.add('error');
        bodyReqError.classList.add('show');
        setTimeout(() => {
          form.classList.remove('invalid');
          bodyInput.classList.remove('error');
          bodyReqError.classList.remove('show');
        }, 3000);
        return true
      }
    }

    const validateForm = (e) => {
      e.preventDefault();
      if(form.checkValidity()) {
        form.classList.remove('invalid');
        submitButton.removeAttribute('disabled');
        submitButton.removeEventListener('click', validateForm);
        submitButton.click();
      } else {
        form.classList.add('invalid');
        submitButton.setAttribute('disabled', true);
        setTimeout(() => {
          form.classList.remove('invalid');
          submitButton.removeAttribute('disabled');
        }, 3000);
        dispatchFirstNameError();
        dispatchLastNameError();
        dispatchEmailError();
        dispatchBodyError();
      }
    }

    const loadListener = () => {
      if (window.location.search.includes('?contact%5B')) {
        let newUrl = new URL(window.location.href);
        newUrl.searchParams.delete("comment");
        history.replaceState(null, '', newUrl);
        form.classList.add('invalid');
        const formYCoords = form.getBoundingClientRect().top + window.pageYOffset;
        window.scrollTo({
          top: formYCoords,
          behavior: "smooth",
        });

        defaultErrors ? defaultErrors.classList.add('show') : null;
        successMessage ? successMessage.classList.add('show') : null;
      }
    }

    const initFormListeners = () =>{
      form = document.getElementById('ContactForm');
      if (form) {
        submitButton = form.querySelector('button[type="submit"]')
        firstNameInput = form.querySelector('input[name*="First name"]');
        lastNameInput = form.querySelector('input[name*="Last name"]')
        emailInput = form.querySelector('input[type="email"]');
        bodyInput = form.querySelector('textarea');


        firstNameReqError = form.querySelector('[data-first-name-required]');
        lastNameReqError = form.querySelector('[data-last-name-required]');
        emailReqError = form.querySelector('[data-email-required]');
        emailFormatError = form.querySelector('[data-email-error]');
        bodyReqError = form.querySelector('[data-body-required]');

        defaultErrors = form.querySelector('[data-default-error]');
        successMessage = form.querySelector('[data-success-message]');

        submitButton.addEventListener('click', validateForm)

        // firstNameInput.addEventListener('blur', (e)=>dispatchFirstNameError())

        firstNameInput.addEventListener('input', ()=>{
          firstNameInput.classList.remove('error');
          firstNameReqError.classList.remove('show');
          if (form.checkValidity()) {
            submitButton.removeAttribute('disabled');
          }
        })

        lastNameInput.addEventListener('input', ()=>{
          lastNameInput.classList.remove('error');
          lastNameReqError.classList.remove('show');
          if (form.checkValidity()) {
            submitButton.removeAttribute('disabled');
          }
        })

        // emailInput.addEventListener('blur', (e)=>dispatchEmailError())

        emailInput.addEventListener('input', ()=>{
          emailInput.classList.remove('error');
          emailReqError.classList.remove('show');
          emailFormatError.classList.remove('show');
          if (form.checkValidity()) {
            submitButton.removeAttribute('disabled');
          }
        })

        // bodyInput.addEventListener('blur', (e)=>dispatchBodyError())

        bodyInput.addEventListener('input', ()=>{
          bodyInput.classList.remove('error');
          bodyReqError.classList.remove('show')
          if (form.checkValidity()) {
            submitButton.removeAttribute('disabled');
          }
        })
      }
    }

    initFormListeners();
    loadListener();
  }

  document.addEventListener('DOMContentLoaded', () => {
    handleSuccessPopup();
    handleFormValidation();
  });

  class CustomSelect extends HTMLElement {
    constructor() {
      super();
      this.defaultSelect = this.querySelector('select');
      this.customSelect = this.querySelector('.custom-select');
      this.label = this.querySelector('.custom-select__label span');
      this.labelIcon = this.querySelector('.custom-select__label svg');
      this.optionsList = this.querySelector('.custom-select__list');
      this.options = this.querySelectorAll('.custom-select__list-option');
      this.currentOption = this.defaultSelect.value;
    }

    syncSelects() {
      this.defaultSelect.value = this.currentOption;
    }

    changeOption(option) {
      let optionValue = option.getAttribute('data-value');
      if (this.currentOption != optionValue) {
        this.currentOption = optionValue;
        this.label.innerHTML = optionValue;
        this.syncSelects();
      }
    }

    toggleSelect() {
      this.customSelect.classList.toggle('opened');
    }

    initSelect() {
      this.customSelect.addEventListener('click', () => {
        this.toggleSelect();
      });

      this.options.forEach((option) => {
        option.addEventListener('click', () => {
          this.changeOption(option);
        });
      });

      document.addEventListener('click', (e) => {
        if (e.target != this.customSelect && !this.customSelect.contains(e.target)) {
          this.customSelect.classList.remove('opened');
        }
      });
    }

    connectedCallback() {
      document.addEventListener('DOMContentLoaded', () => {
        this.initSelect();
      });
    }
  }

  if (customElements.get('custom-select') === undefined) {
    customElements.define('custom-select', CustomSelect);
  }
{% endjavascript %}

{% schema %}
{
  "name": "Contact form",
  "class": "contact-form container",
  "tag": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "Build a contact form with full full control over custom inputs. You can also add an informational column alongside the form for extra information. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
    },
    {
      "type": "header",
      "content": "Layout",
      "info": "Amend the layout of your contact form and the info column alongside it."
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 300,
      "max": 1500,
      "step": 12,
      "unit": "px",
      "label": "Max width",
      "default": 1500
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 10,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Column gap",
      "default": 50
    },
    {
      "type": "select",
      "id": "content_position",
      "label": "Content position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "right"
    },
    {
      "type": "text_alignment",
      "id": "form_text_alignment",
      "label": "Form text alignment",
      "default": "left"
    },
    {
      "type": "select",
      "id": "info_column_position",
      "label": "Info column position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "right"
    },
    {
      "type": "text_alignment",
      "id": "info_text_alignment",
      "label": "Info text alignment",
      "default": "left"
    },
    {
      "type": "text_alignment",
      "id": "success_text_alignment",
      "label": "Success text alignment",
      "default": "center"
    },
    {
      "type": "header",
      "content": "Labels",
      "info": "Customize the color and size of the input labels."
    },
    {
      "type": "color",
      "id": "input_label_color",
      "label": "Input label"
    },
    {
      "type": "range",
      "id": "label_font_size_scale",
      "min": 75,
      "max": 125,
      "step": 1,
      "unit": "%",
      "label": "Font size scale",
      "default": 100
    },
    {
      "type": "header",
      "content": "Inputs",
      "info": "Customize everything about the inputs on your form."
    },
    {
      "type": "color",
      "id": "input_background_color",
      "label": "Input background"
    },
    {
      "type": "color",
      "id": "input_text_color",
      "label": "Input text"
    },
    {
      "type": "color",
      "id": "input_placeholder_color",
      "label": "Input placeholder"
    },
    {
      "type": "color",
      "id": "input_border_color",
      "label": "Input border"
    },
    {
      "type": "color",
      "id": "input_active_highlight_color",
      "label": "Input active hightlight"
    },
    {
      "type": "range",
      "id": "input_font_size_scale",
      "min": 75,
      "max": 125,
      "step": 1,
      "unit": "%",
      "label": "Font size scale",
      "default": 100
    },
    {
      "type": "range",
      "id": "input_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "label": "Border width",
      "default": 1
    },
    {
      "type": "header",
      "content": "Submit button",
      "info": "Amend the submit button at the bottom of the form to your liking."
    },
    {
      "type": "inline_richtext",
      "id": "text",
      "label": "Text"
    },
    {
      "type": "select",
      "id": "type",
      "label": "Type",
      "options": [
        {
          "value": "primary",
          "label": "Primary"
        },
        {
          "value": "secondary",
          "label": "Secondary"
        },
        {
          "value": "override",
          "label": "Override"
        }
      ],
      "default": "primary"
    },
    {
      "type": "header",
      "content": "Submit button override",
      "info": "You can override your button styles by changing the type field above to 'Override'. After that just input your new values below."
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color"
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border thickness",
      "default": 0
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Corner radius",
      "default": 6
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Hover animation",
      "options": [
        {
          "value": "grow",
          "label": "Grow"
        },
        {
          "value": "shrink",
          "label": "Shrink"
        },
        {
          "value": "lighten",
          "label": "Lighten"
        },
        {
          "value": "darken",
          "label": "Darken"
        }
      ],
      "default": "shrink"
    },
    {
      "type": "header",
      "content": "Success message",
      "info": "Change how the success message of your contact form displays."
    },
    {
      "type": "select",
      "id": "success_type",
      "label": "Type",
      "options": [
        {
          "value": "popup",
          "label": "Popup"
        },
        {
          "value": "replace_form",
          "label": "Replace form"
        }
      ],
      "default": "popup"
    },
    {
      "type": "image_picker",
      "id": "success_image",
      "label": "Image"
    },
    {
      "type": "range",
      "id": "success_image_width",
      "min": 1,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Image width",
      "default": 100
    },
    {
      "type": "inline_richtext",
      "id": "success_title",
      "label": "Title"
    },
    {
      "type": "color",
      "id": "success_title_color",
      "label": "Title color"
    },
    {
      "type": "range",
      "id": "success_title_font_size_scale",
      "min": 75,
      "max": 125,
      "step": 1,
      "unit": "%",
      "label": "Title font size scale",
      "default": 100
    },
    {
      "type": "richtext",
      "id": "success_paragraph",
      "label": "Paragraph"
    },
    {
      "type": "color",
      "id": "success_para_color",
      "label": "Paragraph color"
    },
    {
      "type": "range",
      "id": "success_para_font_size_scale",
      "min": 75,
      "max": 125,
      "step": 1,
      "unit": "%",
      "label": "Paragraph font size scale",
      "default": 100
    },
    {
      "type": "header",
      "content": "Error messages",
      "info": "Change the core color of the error messages on this form."
    },
    {
      "type": "color",
      "id": "error_message_color",
      "label": "Color"
    },
    {
      "type": "header",
      "content": "Background",
      "info": "Personalize the background of your section to match your brand. "
    },
    {
      "type": "color",
      "id": "section_background_color",
      "label": "Background color"
    },
    {
      "type": "checkbox",
      "id": "fullwidth_background",
      "label": "Fullwidth background",
      "default": false
    },
    {
      "type": "header",
      "content": "Testing",
      "info": "Attributes within this section are meant only for the purposes of testing and will not effect your live website."
    },
    {
      "type": "checkbox",
      "id": "show_success",
      "label": "Show success message",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_error",
      "label": "Show error message",
      "default": false
    },
    {
      "type": "header",
      "content": "Section padding",
      "info": "Add spacing above and below inside your new section."
    },
    {
      "type": "range",
      "id": "top_padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Top padding",
      "default": 15
    },
    {
      "type": "range",
      "id": "bottom_padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Bottom padding",
      "default": 15
    },
    {
      "type": "range",
      "id": "side_padding",
      "min": 10,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Side padding",
      "default": 24
    },
    {
      "type": "header",
      "content": "Section margin",
      "info": "Add spacing above and below your new section."
    },
    {
      "type": "range",
      "id": "top_margin",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Top margin",
      "default": 0
    },
    {
      "type": "range",
      "id": "bottom_margin",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "Bottom margin",
      "default": 0
    }
  ],
  "blocks": [
    {
      "name": "Email input",
      "type": "email",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Add an email input to your contact form. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "select",
          "id": "width",
          "label": "Column width",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            }
          ],
          "default": "2"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Email"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder"
        }
      ]
    },
    {
      "name": "Text input",
      "type": "text",
      "settings": [
        {
          "type": "paragraph",
          "content": "Add a text input to your contact form. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        },
        {
          "type": "select",
          "id": "width",
          "label": "Column width",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            }
          ],
          "default": "2"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Text"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder"
        }
      ]
    },
    {
      "name": "Phone input",
      "type": "phone",
      "settings": [
        {
          "type": "paragraph",
          "content": "Add a text input to your contact form. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        },
        {
          "type": "select",
          "id": "width",
          "label": "Column width",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            }
          ],
          "default": "2"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Phone"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder"
        }
      ]
    },
    {
      "name": "Text area input",
      "type": "textarea",
      "settings": [
        {
          "type": "paragraph",
          "content": "Add a textarea input to your contact form. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Text area"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder"
        }
      ]
    },
    {
      "name": "Select input",
      "type": "select",
      "settings": [
        {
          "type": "paragraph",
          "content": "Add a dropdown select to your contact form and customize it’s values. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "checkbox",
          "id": "required",
          "label": "Required",
          "default": true
        },
        {
          "type": "select",
          "id": "width",
          "label": "Column width",
          "options": [
            {
              "value": "1",
              "label": "1"
            },
            {
              "value": "2",
              "label": "2"
            }
          ],
          "default": "2"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Label",
          "default": "Select"
        },
        {
          "type": "text",
          "id": "options",
          "label": "Options",
          "placeholder": "Support, Business Enquiry, Feedback",
          "info": "Separate your options with a comma. An example of a valid input is “Support, Business Enquiry, Feedback”."
        }
      ]
    },
    {
      "name": "Information with label",
      "type": "info_text_with_label",
      "settings": [
        {
          "type": "paragraph",
          "content": "Add an extra piece of information to a column alongside your contact form.. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "inline_richtext",
          "id": "label",
          "label": "Label",
          "default": "Heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Information",
          "default": "<p>Information</p>"
        }
      ]
    },
    {
      "name": "Socials",
      "type": "socials",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "Add your social links to a column alongside your contact form. [See Tutorial](https:\/\/help.shopify.com\/manual\/customers\/manage-customers)"
        },
        {
          "type": "range",
          "id": "icon_width",
          "min": 1,
          "max": 48,
          "step": 1,
          "unit": "px",
          "label": "Icon width",
          "default": 24
        },
        {
          "type": "color",
          "id": "icon_color",
          "label": "Icon color"
        },
        {
          "type": "header",
          "content": "Links",
          "info": "Add all of your social links below. The social icon will only appear if its link is populated."
        },
         {
          "type": "checkbox",
          "id": "show_facebook",
          "label": "Show facebook",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_linkedin",
          "label": "Show linkedin",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_youtube",
          "label": "Show youtube",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_instagram",
          "label": "Show instagram",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_twitter",
          "label": "Show twitter",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_pinterest",
          "label": "Show pinterest",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_twitch",
          "label": "Show twitch",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_snapchat",
          "label": "Show snapchat",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_tiktok",
          "label": "Show tiktok",
          "default": true
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Contact form",
      "settings": {
        "max_width": 600,
        "column_gap": 50,
        "content_position": "center",
        "form_text_alignment": "left",
        "info_column_position": "right",
        "info_text_alignment": "left",
        "success_text_alignment": "center",
        "input_label_color": "",
        "label_font_size_scale": 100,
        "input_background_color": "",
        "input_text_color": "",
        "input_placeholder_color": "",
        "input_border_color": "",
        "input_active_highlight_color": "",
        "input_font_size_scale": 100,
        "input_border_width": 1,
        "text": "Submit",
        "type": "primary",
        "text_color": "",
        "background_color": "",
        "border_color": "",
        "border_width": 0,
        "border_radius": 6,
        "animation": "shrink",
        "success_type": "replace_form",
        "success_image_width": 100,
        "success_title": "Thanks for your message!",
        "success_title_color": "",
        "success_title_font_size_scale": 100,
        "success_paragraph": "<p>We'll get back to you within 24 hours.<\/p>",
        "success_para_color": "",
        "success_para_font_size_scale": 100,
        "error_message_color": "",
        "top_margin": 40,
        "bottom_margin": 40
      },
      "blocks": [
        {
          "type": "text",
          "settings": {
            "required": true,
            "width": "1",
            "label": "First name",
            "placeholder": "John"
          }
        },
        {
          "type": "text",
          "settings": {
            "required": true,
            "width": "1",
            "label": "Last name",
            "placeholder": "Doe"
          }
        },
        {
          "type": "email",
          "settings": {
            "width": "2",
            "label": "Email",
            "placeholder": "johndoe@example.com"
          }
        },
        {
          "type": "textarea",
          "settings": {
            "required": true,
            "label": "Query",
            "placeholder": ""
          }
        }
      ]
    },
    {
      "name": "Contact form with information",
      "settings": {
        "column_gap": 50,
        "content_position": "center",
        "form_text_alignment": "left",
        "info_column_position": "right",
        "info_text_alignment": "left",
        "success_text_alignment": "center",
        "input_label_color": "",
        "label_font_size_scale": 100,
        "input_background_color": "",
        "input_text_color": "",
        "input_placeholder_color": "",
        "input_border_color": "",
        "input_active_highlight_color": "",
        "input_font_size_scale": 100,
        "input_border_width": 1,
        "text": "Submit",
        "type": "primary",
        "text_color": "",
        "background_color": "",
        "border_color": "",
        "border_width": 0,
        "border_radius": 6,
        "animation": "shrink",
        "success_type": "replace_form",
        "success_image_width": 100,
        "success_title": "Thanks for your message!",
        "success_title_color": "",
        "success_title_font_size_scale": 100,
        "success_paragraph": "<p>We'll get back to you within 24 hours.<\/p>",
        "success_para_color": "",
        "success_para_font_size_scale": 100,
        "error_message_color": "",
        "top_margin": 40,
        "bottom_margin": 40
      },
      "blocks": [
        {
          "type": "text",
          "settings": {
            "required": true,
            "width": "1",
            "label": "First name",
            "placeholder": "John"
          }
        },
        {
          "type": "text",
          "settings": {
            "required": true,
            "width": "1",
            "label": "Last name",
            "placeholder": "Doe"
          }
        },
        {
          "type": "email",
          "settings": {
            "width": "2",
            "label": "Email",
            "placeholder": "johndoe@example.com"
          }
        },
        {
          "type": "textarea",
          "settings": {
            "required": true,
            "label": "Query",
            "placeholder": ""
          }
        },
        {
          "type": "info_text_with_label",
          "settings": {
            "label": "Address",
            "text": "<p>32 My Street<\/p><p>Bigtown<\/p><p>BG23 4YZ<\/p><p>England<\/p>"
          }
        },
        {
          "type": "info_text_with_label",
          "settings": {
            "label": "Email"
          }
        },
        {
          "type": "info_text_with_label",
          "settings": {
            "label": "Phone",
            "text": "<p>+44 113 496 0000<\/p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}
