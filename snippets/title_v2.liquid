{% comment %}
  This Liquid snippet is used to render a customizable title (e.g., `h1`, `h2`, etc.) with responsive typography and alignment settings.

  Parameters:
  - `text`: The title text to display; defaults to `block.settings.text`.
  - `tag`: The HTML tag to use for the title (e.g., `h1`, `h2`); defaults to `block.settings.tag`.
  - `font_size_scale`: Scale factor for font size; defaults to `block.settings.font_size_scale`.
  - `max_width`: Maximum width of the title block; defaults to `block.settings.max_width`.
  - `color`: Custom color for the title; defaults to `block.settings.color`.
  - `default_color`: Fallback color if `color` is not specified; defaults to `settings.heading_color`.
  - `visible_on_desktop`: Boolean indicating if the title should be visible on desktop; defaults to `block.settings.visible_on_desktop`.
  - `visible_on_mobile`: Boolean indicating if the title should be visible on mobile; defaults to `block.settings.visible_on_mobile`.
  - `block_id`: Unique identifier for the block; defaults to `block.id`.
  - `classes`: Additional CSS classes for the title (optional).
  - `max_rows`: Maximum number of lines to display before truncating the text (optional).
  - `margin_top`: Top margin for the title; defaults to `0`.
  - `margin_bottom`: Bottom margin for the title; defaults to `0`.
  - `top_padding`: Top padding for the title; defaults to `block.settings.top_padding`.
  - `bottom_padding`: Bottom padding for the title; defaults to `block.settings.bottom_padding`.
  - `content_alignment`: Text alignment for desktop view; defaults to `block.settings.content_alignment`.
  - `content_alignment_mobile`: Text alignment for mobile view; defaults to `block.settings.content_alignment_mobile`.
  - `default_font_size_mobile`: Default font size for mobile, based on the `tag` (e.g., `h1`, `h2`).
  - `default_font_size_desktop`: Default font size for desktop, based on the `tag` (e.g., `h1`, `h2`).

  Logic:
  - Determines font size and line height based on global settings and the specified tag.
  - Applies custom styles for desktop and mobile views, including alignment, color, and visibility.
  - Truncates text if `max_rows` is set, using CSS for multi-line ellipsis.

  Usage:
  - Use this snippet to add a responsive, customizable title block in your Liquid template.
  - Ensure that all required settings are correctly passed in to achieve the desired appearance.

{% endcomment %}

{% liquid
  assign default_color = default_color | default: settings.heading_color
  assign text = text | default: block.settings.text
  assign tag = tag | default: block.settings.tag
  assign font_size_scale = font_size_scale | default: block.settings.font_size_scale
  assign max_width = max_width | default: block.settings.max_width
  assign color = color | default: block.settings.color
  assign visible_on_desktop = visible_on_desktop | default: block.settings.visible_on_desktop
  assign visible_on_mobile = visible_on_mobile | default: block.settings.visible_on_mobile
  assign block_id = block_id | default: block.id
  assign classes = classes | default: ''
  assign max_rows = max_rows | times: 1

  assign margin_top = margin_top | default: 0
  assign margin_bottom = margin_bottom | default: 0
  assign top_padding = top_padding | default: block.settings.top_padding
  assign bottom_padding = bottom_padding | default: block.settings.bottom_padding

  assign content_alignment = content_alignment | default: block.settings.content_alignment
  assign content_alignment_mobile = content_alignment_mobile | default: block.settings.content_alignment_mobile

  assign default_font_size_mobile = default_font_size_mobile
  assign default_font_size_desktop = default_font_size_desktop

  case tag
    when 'h1'
      assign default_font_size_mobile = default_font_size_mobile | default: 32
      assign default_font_size_desktop = default_font_size_desktop | default: 64
    when 'h2'
      assign default_font_size_mobile = default_font_size_mobile | default: 32
      assign default_font_size_desktop = default_font_size_desktop | default: 36
    when 'h3'
      assign default_font_size_mobile = default_font_size_mobile | default: 24
      assign default_font_size_desktop = default_font_size_desktop | default: 32
    when 'h4'
      assign default_font_size_mobile = default_font_size_mobile | default: 20
      assign default_font_size_desktop = default_font_size_desktop | default: 24
    when 'h5'
      assign default_font_size_mobile = default_font_size_mobile | default: 18
      assign default_font_size_desktop = default_font_size_desktop | default: 20
    when 'h6'
      assign default_font_size_mobile = default_font_size_mobile | default: 16
      assign default_font_size_desktop = default_font_size_desktop | default: 16
  endcase

  assign global_setting_font_size_scale = settings.heading_font_size_scale | default: 100
  assign global_setting_line_height_scale = settings.heading_line_spacing_scale | default: 100

  assign font_size = default_font_size_mobile | times: global_setting_font_size_scale | divided_by: 100.0 | round | times: font_size_scale | divided_by: 100.0 | round
  assign font_size_desktop = default_font_size_desktop | times: global_setting_font_size_scale | divided_by: 100.0 | round | times: font_size_scale | divided_by: 100.0 | round

  assign line_height = font_size | times: 130 | divided_by: 100.0 | round | times: global_setting_line_height_scale | divided_by: 100.0 | round
  assign line_height_desktop = font_size_desktop | times: 130 | divided_by: 100.0 | round | times: global_setting_line_height_scale | divided_by: 100.0 | round
%}
{% if text != blank %}
  {% style %}
    .block__title.block-{{block_id}} {
        font-family: {{ settings.heading_font.family }}, {{ settings.heading_font.fallback_families }};
        color: {% if color.alpha and color.alpha != 0.0 %}{{color}}{% elsif default_color.alpha and default_color.alpha != 0.0 %}{{default_color}}{% else %}{{settings.heading_color}}{% endif %};
        font-size: {{ font_size }}px;
        line-height: {{line_height}}px;
        font-weight: {{ settings.heading_font.weight }};
        margin: {{margin_top}}px 0 {{margin_bottom}}px;
        {% if top_padding %}
        padding-top: {{top_padding}}px;
        {% endif %}
        {% if padding-bottom %}
        padding-bottom: {{bottom_padding}}px;
        {% endif %}
        {% if content_alignment_mobile %}
        text-align: {{content_alignment_mobile}};
        {% endif %}
        {%- case content_alignment_mobile -%}
          {%- when "center" -%}
            margin-left: auto;
            margin-right: auto;
            text-align: center;
          {%- when "middle" -%}
            margin-left: auto;
            margin-right: auto;
            text-align: center;
          {%- when "left" -%}
            margin-left: 0;
            margin-right: 0;
            text-align: left;
          {%- when "right" -%}
            margin-left: auto;
            margin-right: 0;
            text-align: right;
        {%- endcase -%}
        {% if max_rows != 0 %}
          height: {{line_height |  times: max_rows }}px;
          text-overflow: -o-ellipsis-lastline;
          display: -webkit-box;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: {{max_rows}};
          overflow: hidden;
        {% endif %}
    }

    {% if visible_on_mobile %}
        .block__title.block-{{block_id}} {
            display: block;
            {% if max_rows != 0 %}
              display: -webkit-box;
            {% endif %}
        }
    {% else %}
        .block__title.block-{{block_id}} {
            display: none;
        }
    {% endif %}

    @media only screen and (min-width: 769px) {
        .block__title.block-{{block_id}} {
            font-size: {{ font_size_desktop }}px;
            line-height: {{line_height_desktop}}px;
            {% if content_alignment_mobile %}
            text-align: {{content_alignment}};
            {% endif %}
            {%- case content_alignment -%}
              {%- when "center" -%}
                margin-left: auto;
                margin-right: auto;
                text-align: center;
              {%- when "middle" -%}
                margin-left: auto;
                margin-right: auto;
                text-align: center;
              {%- when "left" -%}
                margin-left: 0;
                margin-right: 0;
                text-align: left;
              {%- when "right" -%}
                margin-left: auto;
                margin-right: 0;
                text-align: right;
            {%- endcase -%}
            {% if max_rows != 0 %}
              height: {{line_height_desktop |  times: max_rows }}px;
              text-overflow: -o-ellipsis-lastline;
              display: -webkit-box;
              -webkit-box-orient: vertical;
              -webkit-line-clamp: {{ max_rows }};
              overflow: hidden;
            {% endif %}
        }

        {% if max_width != blank and max_width > 0 %}
            .block__title.block-{{block_id}} {
                max-width: {{max_width}}px;
            }
        {% endif %}

        {% if visible_on_desktop %}
            .block__title.block-{{block_id}} {
                display: block;
                {% if max_rows != 0 %}
                  display: -webkit-box;
                {% endif %}
            }

        {% else %}
            .block__title.block-{{block_id}} {
                display: none;
            }
        {% endif %}
    }
  {% endstyle %}

  <{{ tag }}
    class="block__title {{ classes }} inherit-inner-content block-{{block_id}}"
    aria-label="{{'accessibility.general.title' | t}}"
  >
    {{ text }}
  </{{ tag }}>
{% endif %}
