{% comment %}
  This Liquid snippet is used to generate responsive images with optimized `srcset` and `sizes` attributes for both desktop and mobile devices.

  Parameters:
  - `image`: The main image object.
  - `image_mobile`: The mobile version of the image (optional).
  - `width`: Desired image width; defaults to the original image width.
  - `height`: Desired image height; defaults to the original image height.
  - `alt_text`: Alternative text for the image; defaults to the image's alt attribute.
  - `aria_label`: ARIA label for accessibility (optional).
  - `fetchpriority`: Specifies image loading priority (`auto` by default, `high` will preload the image).
  - `loading`: Specifies when the image should load (`eager` for immediate load, `lazy` for deferred load).
  - `class`: CSS class for the image (optional).
  - `sizes`: Custom `sizes` attribute for responsive images (optional, auto-generated by default).
  - `srcset`: Comma-separated list of widths for `srcset` (optional, defaults provided).
  - `srcset_mobile`: Comma-separated list of widths for `srcset` for mobile (optional, defaults provided).
  - `enable_zoom`: Boolean flag to enable or disable image zoom (default is `false`).

  Logic:
  - Adjusts loading behavior based on the `fetchpriority` parameter.
  - Generates `srcset` and `sizes` attributes for both desktop and mobile images.
  - Renders a `<picture>` element with appropriate `<source>` elements for responsive images, if both `image` and `image_mobile` are provided.

  Usage:
  - Insert this snippet where responsive image rendering is needed in a Liquid template.
  - Ensure the `image` and `image_mobile` objects are correctly passed in to maximize the snippet's functionality.

  Example:
  - {% render 'responsive-image-dynamic_v2', image: image, aria-label: 'gift-card-image', sizes: image_sizes, fetchpriority: fetchpriority %}
  - {% render 'responsive-image-dynamic_v2', image: background_image, image_mobile: mobile_background_image %}
  - {% render 'responsive-image-dynamic_v2', image: selected_variant.featured_image, fetchpriority: fetchpriority, loading: loading, sizes: image_sizes %}
{% endcomment %}

{% liquid
  assign image = image
  assign image_mobile = image_mobile

  assign width = width | default: image.width
  assign height = height | default: image.height

  assign alt_text = alt_text | default: image.alt

  assign aria_label = aria_label
  assign fetchpriority = fetchpriority | default: 'auto'
  assign loading = loading

  if fetchpriority == 'high'
    assign loading = 'eager'
    assign preload = true
  else
    assign loading = 'lazy'
    assign preload = false
  endif

  assign class = class | default: ''
  assign container_minus_paddings = settings.page_width | minus: 32
  assign container_plus_space = settings.page_width | plus: 32
  assign default_sizes = '(max-width: SIMPLE_CONTAINERpx) calc(100vw - 32px), (min-width: CONTAINERpx) CONTAINERwPADDINGSpx, CONTAINERwPADDINGSpx' | replace: 'SIMPLE_CONTAINER', settings.page_width | replace: 'CONTAINERwPADDINGS', container_minus_paddings | replace: 'CONTAINER', container_plus_space
  assign sizes = sizes | default: default_sizes

  assign srcset = srcset | default: '10, 20, 30, 40, 50, 75, 100, 150, 200, 250, 320, 480, 576, 768, 992, 1024, 1220, 1440, 1680, 1920, 2000, 2180'
  assign srcset_mobile = srcset_mobile | default: '10, 20, 30, 40, 50, 75, 100, 150, 200, 250, 320, 480, 576, 768'

  assign srcset_array = srcset | split: ','
  assign srcset_mobile_array = srcset_mobile | split: ','
  assign srcset_string = ''
  assign srcset_mobile_string = ''

  assign enable_zoom = enable_zoom | default: false
%}

{% if image or image_mobile %}
  {% for src_size in srcset_array %}
    {%- assign clear_src_size = src_size | strip -%}
    {%- assign src_size_number = clear_src_size | times: 1 -%}
    {% if src_size_number <= image.width %}
      {% unless forloop.first %}
        {% assign srcset_string = srcset_string | append: ', ' %}
      {% endunless %}
      {%- assign imageURL = image | image_url: width: src_size -%}
      {% assign wAttr = clear_src_size | append: 'w' %}
      {% assign srcsetLine = imageURL | append: ' ' %}
      {% assign srcsetLine = srcsetLine | append: wAttr %}
      {% assign srcset_string = srcset_string | append: srcsetLine %}
    {% endif %}
  {% endfor %}

  {% if image_mobile != blank %}
    {% for src_size in srcset_mobile_array %}
      {%- assign clear_src_size = src_size | strip -%}
      {%- assign src_size_number = clear_src_size | times: 1 -%}
      {% if src_size_number <= image_mobile.width %}
        {%- assign imageURL = image_mobile | image_url: width: clear_src_size -%}
        {% assign wAttr = clear_src_size | append: 'w' %}
        {% assign srcsetLine = imageURL | append: ' ' %}
        {% assign srcsetLine = srcsetLine | append: wAttr %}
        {% assign srcset_mobile_string = srcset_mobile_string | append: srcsetLine %}
        {% unless forloop.last %}
          {% assign srcset_mobile_string = srcset_mobile_string | append: ', ' %}
        {% endunless %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {%- if image != blank and image_mobile != blank -%}
    <picture>
      <source
        media='(max-width: 768px)'
        srcset='{{ srcset_mobile_string }}'
        sizes='{{sizes}}'
      >
      <source
        media='(min-width: 769px)'
        srcset='{{ srcset_string }}'
        sizes='{{sizes}}'
      >
      {{
        image
        | image_url: width: width
        | image_tag:
          class: class,
          alt: alt_text,
          aria-label: aria_label,
          fetchpriority: fetchpriority,
          loading: loading,
          srcset: srcset_string,
          sizes: sizes,
          preload: preload
      }}
    </picture>
  {%- else -%}
    {{
      image
      | image_url: width: width
      | image_tag:
        class: class,
        alt: alt_text,
        aria-label: aria_label,
        fetchpriority: fetchpriority,
        loading: loading,
        srcset: srcset_string,
        sizes: sizes,
        preload: preload
    }}
  {% endif %}
{% endif %}
